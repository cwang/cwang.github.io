<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Quick take-away on Thoughts from Chen Wang</title><link>https://chenwang.org/categories/quick-take-away/</link><description>Recent content in Quick take-away on Thoughts from Chen Wang</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><copyright>&amp;copy; 2012-2022 Chen Wang | Built by &lt;a href='https://github.com'>GitHub&lt;/a> and &lt;a href='https://gohugo.io'>Hugo&lt;/a> with &lt;a href='https://github.com/natarajmb/charaka-hugo-theme'>Charaka theme&lt;/a> | &lt;a href='https://github.com/cwang/cwang.github.io'>Source Code&lt;/a></copyright><lastBuildDate>Fri, 10 Mar 2017 00:00:00 +0000</lastBuildDate><atom:link href="https://chenwang.org/categories/quick-take-away/index.xml" rel="self" type="application/rss+xml"/><item><title>Opinionated Patterns/Practices in Java Development and Deployment</title><link>https://chenwang.org/posts/2017-03-java-dev-deploy/</link><pubDate>Fri, 10 Mar 2017 00:00:00 +0000</pubDate><guid>https://chenwang.org/posts/2017-03-java-dev-deploy/</guid><description>Caveat Java and JVM have changed a lot since this article was written.
Read with a nostalgic lens.
Development In general Use Java 8 and use it well Use an IDE and use it well Prefer Enum over defined constant/variable Prefer standard/built-in exceptions over custom/user-defined ones Almost always use java.util.concurrent and its subpackages instead of Thread/Runnable Use Interface only when it is absolutely necessary Use Package structure wisely to avoid spaghetti code Master a build tool and stick to it For application developers Choose libraries/frameworks wisely (but still prefer the use of libraries/frameworks over BYO) Write your code so that it can be as framework-agnostic as possible (or if a framework is to be used, embrace it and its dependencies whole-heartedly) Write meaningful tests, i.</description></item></channel></rss>